#端口号
server:
  port: 8011

eureka:
  instance:
    hostname: localhost #地址
  client:
    service-url:
#      向注册中心注册服务
      defaultZone: http://wsm:1@${eureka.instance.hostname}:8000/eureka

spring:
  application:
    name: wsm-upms #服务名
#  mysql配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: admin
    password: admin
    url: jdbc:mysql://${eureka.instance.hostname}:3306/wsm-upms?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC

# 配置mybatis-plus
mybatis-plus:
  # 配置扫描xml
  mapper-locations: classpath:/com/study/xml/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.study.model
  global-config:
    # 逻辑删除配置
    logic-delete-value: 0
    logic-not-delete-value: 1
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector

security:
  oauth2:
    resource:
      id: wsm-upms
      user-info-uri: http://localhost:8001/wsm-oauth/user/principal?clientname=wsm-upms
      prefer-token-info: false

# key-value跟key-uri：token的验证可以直接在本地（即本服务）完成，不需要连接wsm-oauth服务认证服务器。
#                     但是刷新token后、或者注销登录，以前的token不可用。
#              注意1：这是yml方式。
#                    可以使用bean配置，在ResourceSeverConfig类中 打开注解@Bean即可，但是好像他会请求wsm-oauth/user/principal
#              注意2：如果要使用key-value对称加密方式，
#                     到wsm-oauth服务AuthorizationServerConfig类JwtAccessTokenConverter方法中使用对称加密方式
      jwt:
#        key-value: jwt_wsm #对称加密方式
        key-uri: http://localhost:8001/wsm-oauth/oauth/token_key #非对称加密方式 (获取公钥)

ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 2

#熔断器开启
feign:
  hystrix:
    enabled: true

myConfig:
  isUseSecurity: true #是否使用security权限
  projectCode: wsm_project #项目编码
  clientId: client_wsm


